// EXAMPLE JAVASCRIPT

/* 
	function foo() {
	x = 1 + 2;
	return x + 2;
	}

	foo();

	function bar() {
		1 + 2;
	}

	bar = 1;

	bar();

*/


// OUTPUT.C FILE


#include "helpclasses/value.h"
#include "helpclasses/Scope.h"
#include "helpclasses/MathFuncsLib.h"
#include "helpclasses/FunctionLib.h"
#include "helpclasses/functionvalue.h"

Value* foo(Scope* currentscope, list<Value*> params)
{
	currentscope=currentscope->openScope();
	Value* tmp0;

	//Assignment
	Value* tmp1;
	Value* tmp2;
	tmp1 = new NumberValue(1.000000);
	tmp2 = new NumberValue(2.000000);
	tmp0 = MathFuncs::addV2(tmp1, tmp2);
	delete tmp1;
	delete tmp2;
	tmp0 = currentscope->set("x", tmp0);
	Value* tmp3;
	Value* tmp4;
	Value* tmp5;
	tmp4 = currentscope->resolve("x");
	tmp5 = new NumberValue(2.000000);
	tmp3 = MathFuncs::addV2(tmp4, tmp5);
	delete tmp5;
	return tmp3;
}

Value* bar(Scope* currentscope, list<Value*> params)
{
	currentscope=currentscope->openScope();
	Value* tmp0;
	Value* tmp1;
	Value* tmp2;
	tmp1 = new NumberValue(1.000000);
	tmp2 = new NumberValue(2.000000);
	tmp0 = MathFuncs::addV2(tmp1, tmp2);
	delete tmp1;
	delete tmp2;
}


int main(int argc, char* argv[]) {
	Scope* currentscope = new Scope();

	Value* tmp0;
	Value* tmp1;
	tmp1 = currentscope->resolve("foo");
	tmp0 = FunctionLib::call(currentscope, tmp1, NULL);

	//Assignment
	tmp0 = new NumberValue(1.000000);
	tmp0 = currentscope->set("bar", tmp0);
	tmp1 = currentscope->resolve("bar");
	tmp0 = FunctionLib::call(currentscope, tmp1, NULL);

	currentscope->closeScope();
	delete currentscope;
	return 0;
}